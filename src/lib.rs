// automatically generated by rust-bindgen

pub type uintptr_t = ::std::os::raw::c_ulonglong;
pub type va_list = *mut ::std::os::raw::c_char;
pub type size_t = ::std::os::raw::c_ulonglong;
pub type ptrdiff_t = ::std::os::raw::c_longlong;
pub type intptr_t = ::std::os::raw::c_longlong;
pub type wchar_t = ::std::os::raw::c_ushort;
pub type int8_t = ::std::os::raw::c_char;
pub type int16_t = ::std::os::raw::c_short;
pub type int32_t = ::std::os::raw::c_int;
pub type int64_t = ::std::os::raw::c_longlong;
pub type uint8_t = ::std::os::raw::c_uchar;
pub type uint16_t = ::std::os::raw::c_ushort;
pub type uint32_t = ::std::os::raw::c_uint;
pub type uint64_t = ::std::os::raw::c_ulonglong;
pub type int_least8_t = ::std::os::raw::c_char;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_longlong;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulonglong;
pub type int_fast8_t = ::std::os::raw::c_char;
pub type int_fast16_t = ::std::os::raw::c_int;
pub type int_fast32_t = ::std::os::raw::c_int;
pub type int_fast64_t = ::std::os::raw::c_longlong;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_uint;
pub type uint_fast32_t = ::std::os::raw::c_uint;
pub type uint_fast64_t = ::std::os::raw::c_ulonglong;
pub type intmax_t = ::std::os::raw::c_longlong;
pub type uintmax_t = ::std::os::raw::c_ulonglong;
pub type __crt_bool = u8;
pub type errno_t = ::std::os::raw::c_int;
pub type wint_t = ::std::os::raw::c_ushort;
pub type wctype_t = ::std::os::raw::c_ushort;
pub type __time32_t = ::std::os::raw::c_long;
pub type __time64_t = ::std::os::raw::c_longlong;
#[repr(C)]
#[derive(Copy)]
pub struct Struct___crt_locale_data_public {
    pub _locale_pctype: *const ::std::os::raw::c_ushort,
    pub _locale_mb_cur_max: ::std::os::raw::c_int,
    pub _locale_lc_codepage: ::std::os::raw::c_uint,
}
impl ::std::clone::Clone for Struct___crt_locale_data_public {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct___crt_locale_data_public {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type __crt_locale_data_public = Struct___crt_locale_data_public;
pub enum Struct___crt_locale_data { }
pub enum Struct___crt_multibyte_data { }
#[repr(C)]
#[derive(Copy)]
pub struct Struct___crt_locale_pointers {
    pub locinfo: *mut Struct___crt_locale_data,
    pub mbcinfo: *mut Struct___crt_multibyte_data,
}
impl ::std::clone::Clone for Struct___crt_locale_pointers {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct___crt_locale_pointers {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type __crt_locale_pointers = Struct___crt_locale_pointers;
pub type _locale_t = *mut __crt_locale_pointers;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__Mbstatet {
    pub _Wchar: ::std::os::raw::c_ulong,
    pub _Byte: ::std::os::raw::c_ushort,
    pub _State: ::std::os::raw::c_ushort,
}
impl ::std::clone::Clone for Struct__Mbstatet {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct__Mbstatet {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type _Mbstatet = Struct__Mbstatet;
pub type mbstate_t = _Mbstatet;
pub type time_t = __time64_t;
pub type rsize_t = size_t;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__iobuf {
    pub _Placeholder: *mut ::std::os::raw::c_void,
}
impl ::std::clone::Clone for Struct__iobuf {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct__iobuf {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type FILE = Struct__iobuf;
pub type fpos_t = ::std::os::raw::c_longlong;
pub type _bool = ::std::os::raw::c_uchar;
pub type chtype = uint64_t;
pub type attr_t = chtype;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed1 {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub button: [::std::os::raw::c_short; 3usize],
    pub changes: ::std::os::raw::c_int,
    pub xbutton: [::std::os::raw::c_short; 6usize],
}
impl ::std::clone::Clone for Struct_Unnamed1 {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type MOUSE_STATUS = Struct_Unnamed1;
pub type mmask_t = ::std::os::raw::c_ulong;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed2 {
    pub id: ::std::os::raw::c_short,
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub bstate: mmask_t,
}
impl ::std::clone::Clone for Struct_Unnamed2 {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type MEVENT = Struct_Unnamed2;
#[repr(C)]
#[derive(Copy)]
pub struct Struct__win {
    pub _cury: ::std::os::raw::c_int,
    pub _curx: ::std::os::raw::c_int,
    pub _maxy: ::std::os::raw::c_int,
    pub _maxx: ::std::os::raw::c_int,
    pub _begy: ::std::os::raw::c_int,
    pub _begx: ::std::os::raw::c_int,
    pub _flags: ::std::os::raw::c_int,
    pub _attrs: chtype,
    pub _bkgd: chtype,
    pub _clear: _bool,
    pub _leaveit: _bool,
    pub _scroll: _bool,
    pub _nodelay: _bool,
    pub _immed: _bool,
    pub _sync: _bool,
    pub _use_keypad: _bool,
    pub _y: *mut *mut chtype,
    pub _firstch: *mut ::std::os::raw::c_int,
    pub _lastch: *mut ::std::os::raw::c_int,
    pub _tmarg: ::std::os::raw::c_int,
    pub _bmarg: ::std::os::raw::c_int,
    pub _delayms: ::std::os::raw::c_int,
    pub _parx: ::std::os::raw::c_int,
    pub _pary: ::std::os::raw::c_int,
    pub _parent: *mut Struct__win,
}
impl ::std::clone::Clone for Struct__win {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct__win {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type WINDOW = Struct__win;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed3 {
    pub alive: _bool,
    pub autocr: _bool,
    pub cbreak: _bool,
    pub echo: _bool,
    pub raw_inp: _bool,
    pub raw_out: _bool,
    pub audible: _bool,
    pub mono: _bool,
    pub resized: _bool,
    pub orig_attr: _bool,
    pub orig_fore: ::std::os::raw::c_short,
    pub orig_back: ::std::os::raw::c_short,
    pub cursrow: ::std::os::raw::c_int,
    pub curscol: ::std::os::raw::c_int,
    pub visibility: ::std::os::raw::c_int,
    pub orig_cursor: ::std::os::raw::c_int,
    pub lines: ::std::os::raw::c_int,
    pub cols: ::std::os::raw::c_int,
    pub _trap_mbe: ::std::os::raw::c_ulong,
    pub _map_mbe_to_key: ::std::os::raw::c_ulong,
    pub mouse_wait: ::std::os::raw::c_int,
    pub slklines: ::std::os::raw::c_int,
    pub slk_winptr: *mut WINDOW,
    pub linesrippedoff: ::std::os::raw::c_int,
    pub linesrippedoffontop: ::std::os::raw::c_int,
    pub delaytenths: ::std::os::raw::c_int,
    pub _preserve: _bool,
    pub _restore: ::std::os::raw::c_int,
    pub save_key_modifiers: _bool,
    pub return_key_modifiers: _bool,
    pub key_code: _bool,
    pub line_color: ::std::os::raw::c_short,
}
impl ::std::clone::Clone for Struct_Unnamed3 {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_Unnamed3 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type SCREEN = Struct_Unnamed3;
#[link(name = "pdcurses")]
extern "C" {
    pub static mut __security_cookie: uintptr_t;
    pub static mut LINES: ::std::os::raw::c_int;
    pub static mut COLS: ::std::os::raw::c_int;
    pub static mut stdscr: *mut WINDOW;
    pub static mut curscr: *mut WINDOW;
    pub static mut SP: *mut SCREEN;
    pub static mut Mouse_status: MOUSE_STATUS;
    pub static mut COLORS: ::std::os::raw::c_int;
    pub static mut COLOR_PAIRS: ::std::os::raw::c_int;
    pub static mut TABSIZE: ::std::os::raw::c_int;
    pub static mut acs_map: *mut chtype;
    pub static mut ttytype: *mut ::std::os::raw::c_char;
}
#[link(name = "pdcurses")]
extern "C" {
    pub fn __va_start(arg1: *mut va_list, ...);
    pub fn __security_init_cookie();
    pub fn __security_check_cookie(_StackCookie: uintptr_t);
    pub fn __report_gsfailure(_StackCookie: uintptr_t);
    pub fn _invalid_parameter_noinfo();
    pub fn _invalid_parameter_noinfo_noreturn();
    pub fn _invoke_watson(arg1: *const wchar_t,
                          arg2: *const wchar_t,
                          arg3: *const wchar_t,
                          arg4: ::std::os::raw::c_uint,
                          arg5: uintptr_t);
    pub fn _errno() -> *mut ::std::os::raw::c_int;
    pub fn _set_errno(_Value: ::std::os::raw::c_int) -> errno_t;
    pub fn _get_errno(_Value: *mut ::std::os::raw::c_int) -> errno_t;
    pub fn __threadid() -> ::std::os::raw::c_ulong;
    pub fn __threadhandle() -> uintptr_t;
    pub fn __local_stdio_printf_options() -> *mut ::std::os::raw::c_ulonglong;
    pub fn __local_stdio_scanf_options() -> *mut ::std::os::raw::c_ulonglong;
    pub fn __acrt_iob_func(arg1: ::std::os::raw::c_uint) -> *mut FILE;
    pub fn fgetwc(_Stream: *mut FILE) -> wint_t;
    pub fn _fgetwchar() -> wint_t;
    pub fn fputwc(_Character: wchar_t, _Stream: *mut FILE) -> wint_t;
    pub fn _fputwchar(_Character: wchar_t) -> wint_t;
    pub fn getwc(_Stream: *mut FILE) -> wint_t;
    pub fn getwchar() -> wint_t;
    pub fn fgetws(_Buffer: *mut wchar_t,
                  _BufferCount: ::std::os::raw::c_int,
                  _Stream: *mut FILE)
                  -> *mut wchar_t;
    pub fn fputws(_Buffer: *const wchar_t, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _getws_s(_Buffer: *mut wchar_t, _BufferCount: size_t) -> *mut wchar_t;
    pub fn putwc(_Character: wchar_t, _Stream: *mut FILE) -> wint_t;
    pub fn putwchar(_Character: wchar_t) -> wint_t;
    pub fn _putws(_Buffer: *const wchar_t) -> ::std::os::raw::c_int;
    pub fn ungetwc(_Character: wint_t, _Stream: *mut FILE) -> wint_t;
    pub fn _wfdopen(_FileHandle: ::std::os::raw::c_int, _Mode: *const wchar_t) -> *mut FILE;
    pub fn _wfopen(_FileName: *const wchar_t, _Mode: *const wchar_t) -> *mut FILE;
    pub fn _wfopen_s(_Stream: *mut *mut FILE,
                     _FileName: *const wchar_t,
                     _Mode: *const wchar_t)
                     -> errno_t;
    pub fn _wfreopen(_FileName: *const wchar_t,
                     _Mode: *const wchar_t,
                     _OldStream: *mut FILE)
                     -> *mut FILE;
    pub fn _wfreopen_s(_Stream: *mut *mut FILE,
                       _FileName: *const wchar_t,
                       _Mode: *const wchar_t,
                       _OldStream: *mut FILE)
                       -> errno_t;
    pub fn _wfsopen(_FileName: *const wchar_t,
                    _Mode: *const wchar_t,
                    _ShFlag: ::std::os::raw::c_int)
                    -> *mut FILE;
    pub fn _wperror(_ErrorMessage: *const wchar_t);
    pub fn _wpopen(_Command: *const wchar_t, _Mode: *const wchar_t) -> *mut FILE;
    pub fn _wremove(_FileName: *const wchar_t) -> ::std::os::raw::c_int;
    pub fn _wtempnam(_Directory: *const wchar_t, _FilePrefix: *const wchar_t) -> *mut wchar_t;
    pub fn _wtmpnam_s(_Buffer: *mut wchar_t, _BufferCount: size_t) -> errno_t;
    pub fn _wtmpnam(_Buffer: *mut wchar_t) -> *mut wchar_t;
    pub fn _fgetwc_nolock(_Stream: *mut FILE) -> wint_t;
    pub fn _fputwc_nolock(_Character: wchar_t, _Stream: *mut FILE) -> wint_t;
    pub fn _getwc_nolock(_Stream: *mut FILE) -> wint_t;
    pub fn _putwc_nolock(_Character: wchar_t, _Stream: *mut FILE) -> wint_t;
    pub fn _ungetwc_nolock(_Character: wint_t, _Stream: *mut FILE) -> wint_t;
    pub fn __stdio_common_vfwprintf(_Options: ::std::os::raw::c_ulonglong,
                                    _Stream: *mut FILE,
                                    _Format: *const wchar_t,
                                    _Locale: _locale_t,
                                    _ArgList: va_list)
                                    -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfwprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                      _Stream: *mut FILE,
                                      _Format: *const wchar_t,
                                      _Locale: _locale_t,
                                      _ArgList: va_list)
                                      -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfwprintf_p(_Options: ::std::os::raw::c_ulonglong,
                                      _Stream: *mut FILE,
                                      _Format: *const wchar_t,
                                      _Locale: _locale_t,
                                      _ArgList: va_list)
                                      -> ::std::os::raw::c_int;
    pub fn _vfwprintf_l(_Stream: *mut FILE,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vfwprintf(_Stream: *mut FILE,
                     _Format: *const wchar_t,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _vfwprintf_s_l(_Stream: *mut FILE,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn vfwprintf_s(_Stream: *mut FILE,
                       _Format: *const wchar_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vfwprintf_p_l(_Stream: *mut FILE,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vfwprintf_p(_Stream: *mut FILE,
                        _Format: *const wchar_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vwprintf_l(_Format: *const wchar_t,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vwprintf(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _vwprintf_s_l(_Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn vwprintf_s(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _vwprintf_p_l(_Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vwprintf_p(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _fwprintf_l(_Stream: *mut FILE,
                       _Format: *const wchar_t,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn fwprintf(_Stream: *mut FILE, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _fwprintf_s_l(_Stream: *mut FILE,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn fwprintf_s(_Stream: *mut FILE, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _fwprintf_p_l(_Stream: *mut FILE,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _fwprintf_p(_Stream: *mut FILE, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _wprintf_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn wprintf(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _wprintf_s_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn wprintf_s(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _wprintf_p_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn _wprintf_p(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfwscanf(_Options: ::std::os::raw::c_ulonglong,
                                   _Stream: *mut FILE,
                                   _Format: *const wchar_t,
                                   _Locale: _locale_t,
                                   _ArgList: va_list)
                                   -> ::std::os::raw::c_int;
    pub fn _vfwscanf_l(_Stream: *mut FILE,
                       _Format: *const wchar_t,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vfwscanf(_Stream: *mut FILE,
                    _Format: *const wchar_t,
                    _ArgList: va_list)
                    -> ::std::os::raw::c_int;
    pub fn _vfwscanf_s_l(_Stream: *mut FILE,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn vfwscanf_s(_Stream: *mut FILE,
                      _Format: *const wchar_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _vwscanf_l(_Format: *const wchar_t,
                      _Locale: _locale_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vwscanf(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _vwscanf_s_l(_Format: *const wchar_t,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vwscanf_s(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _fwscanf_l(_Stream: *mut FILE,
                      _Format: *const wchar_t,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn fwscanf(_Stream: *mut FILE, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _fwscanf_s_l(_Stream: *mut FILE,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn fwscanf_s(_Stream: *mut FILE, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _wscanf_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn wscanf(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _wscanf_s_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn wscanf_s(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vswprintf(_Options: ::std::os::raw::c_ulonglong,
                                    _Buffer: *mut wchar_t,
                                    _BufferCount: size_t,
                                    _Format: *const wchar_t,
                                    _Locale: _locale_t,
                                    _ArgList: va_list)
                                    -> ::std::os::raw::c_int;
    pub fn __stdio_common_vswprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                      _Buffer: *mut wchar_t,
                                      _BufferCount: size_t,
                                      _Format: *const wchar_t,
                                      _Locale: _locale_t,
                                      _ArgList: va_list)
                                      -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsnwprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                       _Buffer: *mut wchar_t,
                                       _BufferCount: size_t,
                                       _MaxCount: size_t,
                                       _Format: *const wchar_t,
                                       _Locale: _locale_t,
                                       _ArgList: va_list)
                                       -> ::std::os::raw::c_int;
    pub fn __stdio_common_vswprintf_p(_Options: ::std::os::raw::c_ulonglong,
                                      _Buffer: *mut wchar_t,
                                      _BufferCount: size_t,
                                      _Format: *const wchar_t,
                                      _Locale: _locale_t,
                                      _ArgList: va_list)
                                      -> ::std::os::raw::c_int;
    pub fn _vsnwprintf_l(_Buffer: *mut wchar_t,
                         _BufferCount: size_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vsnwprintf_s_l(_Buffer: *mut wchar_t,
                           _BufferCount: size_t,
                           _MaxCount: size_t,
                           _Format: *const wchar_t,
                           _Locale: _locale_t,
                           _ArgList: va_list)
                           -> ::std::os::raw::c_int;
    pub fn _vsnwprintf_s(_Buffer: *mut wchar_t,
                         _BufferCount: size_t,
                         _MaxCount: size_t,
                         _Format: *const wchar_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _snwprintf(_Buffer: *mut wchar_t,
                      _BufferCount: size_t,
                      _Format: *const wchar_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn _vsnwprintf(_Buffer: *mut wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vswprintf_c_l(_Buffer: *mut wchar_t,
                          _BufferCount: size_t,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vswprintf_c(_Buffer: *mut wchar_t,
                        _BufferCount: size_t,
                        _Format: *const wchar_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vswprintf_l(_Buffer: *mut wchar_t,
                        _BufferCount: size_t,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn __vswprintf_l(_Buffer: *mut wchar_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         _Args: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vswprintf(_Buffer: *mut wchar_t,
                      _Format: *const wchar_t,
                      _Args: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vswprintf(_Buffer: *mut wchar_t,
                     _BufferCount: size_t,
                     _Format: *const wchar_t,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _vswprintf_s_l(_Buffer: *mut wchar_t,
                          _BufferCount: size_t,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn vswprintf_s(_Buffer: *mut wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vswprintf_p_l(_Buffer: *mut wchar_t,
                          _BufferCount: size_t,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vswprintf_p(_Buffer: *mut wchar_t,
                        _BufferCount: size_t,
                        _Format: *const wchar_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vscwprintf_l(_Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vscwprintf(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn _vscwprintf_p_l(_Format: *const wchar_t,
                           _Locale: _locale_t,
                           _ArgList: va_list)
                           -> ::std::os::raw::c_int;
    pub fn _vscwprintf_p(_Format: *const wchar_t, _ArgList: va_list) -> ::std::os::raw::c_int;
    pub fn __swprintf_l(_Buffer: *mut wchar_t,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _swprintf_l(_Buffer: *mut wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _swprintf(_Buffer: *mut wchar_t, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn swprintf(_Buffer: *mut wchar_t,
                    _BufferCount: size_t,
                    _Format: *const wchar_t,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn _swprintf_s_l(_Buffer: *mut wchar_t,
                         _BufferCount: size_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn swprintf_s(_Buffer: *mut wchar_t,
                      _BufferCount: size_t,
                      _Format: *const wchar_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn _swprintf_p_l(_Buffer: *mut wchar_t,
                         _BufferCount: size_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _swprintf_p(_Buffer: *mut wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _swprintf_c_l(_Buffer: *mut wchar_t,
                         _BufferCount: size_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _swprintf_c(_Buffer: *mut wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _snwprintf_l(_Buffer: *mut wchar_t,
                        _BufferCount: size_t,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _snwprintf_s_l(_Buffer: *mut wchar_t,
                          _BufferCount: size_t,
                          _MaxCount: size_t,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          ...)
                          -> ::std::os::raw::c_int;
    pub fn _snwprintf_s(_Buffer: *mut wchar_t,
                        _BufferCount: size_t,
                        _MaxCount: size_t,
                        _Format: *const wchar_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _scwprintf_l(_Format: *const wchar_t, _Locale: _locale_t, ...) -> ::std::os::raw::c_int;
    pub fn _scwprintf(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _scwprintf_p_l(_Format: *const wchar_t,
                          _Locale: _locale_t,
                          ...)
                          -> ::std::os::raw::c_int;
    pub fn _scwprintf_p(_Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vswscanf(_Options: ::std::os::raw::c_ulonglong,
                                   _Buffer: *const wchar_t,
                                   _BufferCount: size_t,
                                   _Format: *const wchar_t,
                                   _Locale: _locale_t,
                                   _ArgList: va_list)
                                   -> ::std::os::raw::c_int;
    pub fn _vswscanf_l(_Buffer: *const wchar_t,
                       _Format: *const wchar_t,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vswscanf(_Buffer: *const wchar_t,
                    _Format: *const wchar_t,
                    _ArgList: va_list)
                    -> ::std::os::raw::c_int;
    pub fn _vswscanf_s_l(_Buffer: *const wchar_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn vswscanf_s(_Buffer: *const wchar_t,
                      _Format: *const wchar_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _vsnwscanf_l(_Buffer: *const wchar_t,
                        _BufferCount: size_t,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vsnwscanf_s_l(_Buffer: *const wchar_t,
                          _BufferCount: size_t,
                          _Format: *const wchar_t,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _swscanf_l(_Buffer: *const wchar_t,
                      _Format: *const wchar_t,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn swscanf(_Buffer: *const wchar_t, _Format: *const wchar_t, ...) -> ::std::os::raw::c_int;
    pub fn _swscanf_s_l(_Buffer: *const wchar_t,
                        _Format: *const wchar_t,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn swscanf_s(_Buffer: *const wchar_t,
                     _Format: *const wchar_t,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn _snwscanf_l(_Buffer: *const wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _snwscanf(_Buffer: *const wchar_t,
                     _BufferCount: size_t,
                     _Format: *const wchar_t,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn _snwscanf_s_l(_Buffer: *const wchar_t,
                         _BufferCount: size_t,
                         _Format: *const wchar_t,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _snwscanf_s(_Buffer: *const wchar_t,
                       _BufferCount: size_t,
                       _Format: *const wchar_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _get_stream_buffer_pointers(_Stream: *mut FILE,
                                       _Base: *mut *mut *mut ::std::os::raw::c_char,
                                       _Pointer: *mut *mut *mut ::std::os::raw::c_char,
                                       _Count: *mut *mut ::std::os::raw::c_int)
                                       -> errno_t;
    pub fn clearerr_s(_Stream: *mut FILE) -> errno_t;
    pub fn fopen_s(_Stream: *mut *mut FILE,
                   _FileName: *const ::std::os::raw::c_char,
                   _Mode: *const ::std::os::raw::c_char)
                   -> errno_t;
    pub fn fread_s(_Buffer: *mut ::std::os::raw::c_void,
                   _BufferSize: size_t,
                   _ElementSize: size_t,
                   _ElementCount: size_t,
                   _Stream: *mut FILE)
                   -> size_t;
    pub fn freopen_s(_Stream: *mut *mut FILE,
                     _FileName: *const ::std::os::raw::c_char,
                     _Mode: *const ::std::os::raw::c_char,
                     _OldStream: *mut FILE)
                     -> errno_t;
    pub fn gets_s(_Buffer: *mut ::std::os::raw::c_char,
                  _Size: rsize_t)
                  -> *mut ::std::os::raw::c_char;
    pub fn tmpfile_s(_Stream: *mut *mut FILE) -> errno_t;
    pub fn tmpnam_s(_Buffer: *mut ::std::os::raw::c_char, _Size: rsize_t) -> errno_t;
    pub fn clearerr(_Stream: *mut FILE);
    pub fn fclose(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fcloseall() -> ::std::os::raw::c_int;
    pub fn _fdopen(_FileHandle: ::std::os::raw::c_int,
                   _Mode: *const ::std::os::raw::c_char)
                   -> *mut FILE;
    pub fn feof(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn ferror(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fflush(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn fgetc(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fgetchar() -> ::std::os::raw::c_int;
    pub fn fgetpos(_Stream: *mut FILE, _Position: *mut fpos_t) -> ::std::os::raw::c_int;
    pub fn fgets(_Buffer: *mut ::std::os::raw::c_char,
                 _MaxCount: ::std::os::raw::c_int,
                 _Stream: *mut FILE)
                 -> *mut ::std::os::raw::c_char;
    pub fn _fileno(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _flushall() -> ::std::os::raw::c_int;
    pub fn fopen(_FileName: *const ::std::os::raw::c_char,
                 _Mode: *const ::std::os::raw::c_char)
                 -> *mut FILE;
    pub fn fputc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fputchar(_Character: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn fputs(_Buffer: *const ::std::os::raw::c_char,
                 _Stream: *mut FILE)
                 -> ::std::os::raw::c_int;
    pub fn fread(_Buffer: *mut ::std::os::raw::c_void,
                 _ElementSize: size_t,
                 _ElementCount: size_t,
                 _Stream: *mut FILE)
                 -> size_t;
    pub fn freopen(_FileName: *const ::std::os::raw::c_char,
                   _Mode: *const ::std::os::raw::c_char,
                   _Stream: *mut FILE)
                   -> *mut FILE;
    pub fn _fsopen(_FileName: *const ::std::os::raw::c_char,
                   _Mode: *const ::std::os::raw::c_char,
                   _ShFlag: ::std::os::raw::c_int)
                   -> *mut FILE;
    pub fn fsetpos(_Stream: *mut FILE, _Position: *const fpos_t) -> ::std::os::raw::c_int;
    pub fn fseek(_Stream: *mut FILE,
                 _Offset: ::std::os::raw::c_long,
                 _Origin: ::std::os::raw::c_int)
                 -> ::std::os::raw::c_int;
    pub fn _fseeki64(_Stream: *mut FILE,
                     _Offset: ::std::os::raw::c_longlong,
                     _Origin: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn ftell(_Stream: *mut FILE) -> ::std::os::raw::c_long;
    pub fn _ftelli64(_Stream: *mut FILE) -> ::std::os::raw::c_longlong;
    pub fn fwrite(_Buffer: *const ::std::os::raw::c_void,
                  _ElementSize: size_t,
                  _ElementCount: size_t,
                  _Stream: *mut FILE)
                  -> size_t;
    pub fn getc(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn getchar() -> ::std::os::raw::c_int;
    pub fn _getmaxstdio() -> ::std::os::raw::c_int;
    pub fn _getw(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn perror(_ErrorMessage: *const ::std::os::raw::c_char);
    pub fn _pclose(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _popen(_Command: *const ::std::os::raw::c_char,
                  _Mode: *const ::std::os::raw::c_char)
                  -> *mut FILE;
    pub fn putc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn putchar(_Character: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn puts(_Buffer: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn _putw(_Word: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn remove(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn rename(_OldFileName: *const ::std::os::raw::c_char,
                  _NewFileName: *const ::std::os::raw::c_char)
                  -> ::std::os::raw::c_int;
    pub fn _unlink(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn unlink(_FileName: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn rewind(_Stream: *mut FILE);
    pub fn _rmtmp() -> ::std::os::raw::c_int;
    pub fn setbuf(_Stream: *mut FILE, _Buffer: *mut ::std::os::raw::c_char);
    pub fn _setmaxstdio(_Maximum: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn setvbuf(_Stream: *mut FILE,
                   _Buffer: *mut ::std::os::raw::c_char,
                   _Mode: ::std::os::raw::c_int,
                   _Size: size_t)
                   -> ::std::os::raw::c_int;
    pub fn _tempnam(_DirectoryName: *const ::std::os::raw::c_char,
                    _FilePrefix: *const ::std::os::raw::c_char)
                    -> *mut ::std::os::raw::c_char;
    pub fn tmpfile() -> *mut FILE;
    pub fn tmpnam(_Buffer: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
    pub fn ungetc(_Character: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _lock_file(_Stream: *mut FILE);
    pub fn _unlock_file(_Stream: *mut FILE);
    pub fn _fclose_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fflush_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fgetc_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _fputc_nolock(_Character: ::std::os::raw::c_int,
                         _Stream: *mut FILE)
                         -> ::std::os::raw::c_int;
    pub fn _fread_nolock(_Buffer: *mut ::std::os::raw::c_void,
                         _ElementSize: size_t,
                         _ElementCount: size_t,
                         _Stream: *mut FILE)
                         -> size_t;
    pub fn _fread_nolock_s(_Buffer: *mut ::std::os::raw::c_void,
                           _BufferSize: size_t,
                           _ElementSize: size_t,
                           _ElementCount: size_t,
                           _Stream: *mut FILE)
                           -> size_t;
    pub fn _fseek_nolock(_Stream: *mut FILE,
                         _Offset: ::std::os::raw::c_long,
                         _Origin: ::std::os::raw::c_int)
                         -> ::std::os::raw::c_int;
    pub fn _fseeki64_nolock(_Stream: *mut FILE,
                            _Offset: ::std::os::raw::c_longlong,
                            _Origin: ::std::os::raw::c_int)
                            -> ::std::os::raw::c_int;
    pub fn _ftell_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_long;
    pub fn _ftelli64_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_longlong;
    pub fn _fwrite_nolock(_Buffer: *const ::std::os::raw::c_void,
                          _ElementSize: size_t,
                          _ElementCount: size_t,
                          _Stream: *mut FILE)
                          -> size_t;
    pub fn _getc_nolock(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn _putc_nolock(_Character: ::std::os::raw::c_int,
                        _Stream: *mut FILE)
                        -> ::std::os::raw::c_int;
    pub fn _ungetc_nolock(_Character: ::std::os::raw::c_int,
                          _Stream: *mut FILE)
                          -> ::std::os::raw::c_int;
    pub fn __p__commode() -> *mut ::std::os::raw::c_int;
    pub fn __stdio_common_vfprintf(_Options: ::std::os::raw::c_ulonglong,
                                   _Stream: *mut FILE,
                                   _Format: *const ::std::os::raw::c_char,
                                   _Locale: _locale_t,
                                   _ArgList: va_list)
                                   -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                     _Stream: *mut FILE,
                                     _Format: *const ::std::os::raw::c_char,
                                     _Locale: _locale_t,
                                     _ArgList: va_list)
                                     -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfprintf_p(_Options: ::std::os::raw::c_ulonglong,
                                     _Stream: *mut FILE,
                                     _Format: *const ::std::os::raw::c_char,
                                     _Locale: _locale_t,
                                     _ArgList: va_list)
                                     -> ::std::os::raw::c_int;
    pub fn _vfprintf_l(_Stream: *mut FILE,
                       _Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vfprintf(_Stream: *mut FILE,
                    _Format: *const ::std::os::raw::c_char,
                    _ArgList: va_list)
                    -> ::std::os::raw::c_int;
    pub fn _vfprintf_s_l(_Stream: *mut FILE,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn vfprintf_s(_Stream: *mut FILE,
                      _Format: *const ::std::os::raw::c_char,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _vfprintf_p_l(_Stream: *mut FILE,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vfprintf_p(_Stream: *mut FILE,
                       _Format: *const ::std::os::raw::c_char,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vprintf_l(_Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vprintf(_Format: *const ::std::os::raw::c_char,
                   _ArgList: va_list)
                   -> ::std::os::raw::c_int;
    pub fn _vprintf_s_l(_Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vprintf_s(_Format: *const ::std::os::raw::c_char,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _vprintf_p_l(_Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vprintf_p(_Format: *const ::std::os::raw::c_char,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _fprintf_l(_Stream: *mut FILE,
                      _Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn fprintf(_Stream: *mut FILE,
                   _Format: *const ::std::os::raw::c_char,
                   ...)
                   -> ::std::os::raw::c_int;
    pub fn _set_printf_count_output(_Value: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn _get_printf_count_output() -> ::std::os::raw::c_int;
    pub fn _fprintf_s_l(_Stream: *mut FILE,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn fprintf_s(_Stream: *mut FILE,
                     _Format: *const ::std::os::raw::c_char,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn _fprintf_p_l(_Stream: *mut FILE,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _fprintf_p(_Stream: *mut FILE,
                      _Format: *const ::std::os::raw::c_char,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn _printf_l(_Format: *const ::std::os::raw::c_char,
                     _Locale: _locale_t,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn printf(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn _printf_s_l(_Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn printf_s(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn _printf_p_l(_Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _printf_p(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vfscanf(_Options: ::std::os::raw::c_ulonglong,
                                  _Stream: *mut FILE,
                                  _Format: *const ::std::os::raw::c_char,
                                  _Locale: _locale_t,
                                  _Arglist: va_list)
                                  -> ::std::os::raw::c_int;
    pub fn _vfscanf_l(_Stream: *mut FILE,
                      _Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vfscanf(_Stream: *mut FILE,
                   _Format: *const ::std::os::raw::c_char,
                   _ArgList: va_list)
                   -> ::std::os::raw::c_int;
    pub fn _vfscanf_s_l(_Stream: *mut FILE,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vfscanf_s(_Stream: *mut FILE,
                     _Format: *const ::std::os::raw::c_char,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _vscanf_l(_Format: *const ::std::os::raw::c_char,
                     _Locale: _locale_t,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn vscanf(_Format: *const ::std::os::raw::c_char,
                  _ArgList: va_list)
                  -> ::std::os::raw::c_int;
    pub fn _vscanf_s_l(_Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vscanf_s(_Format: *const ::std::os::raw::c_char,
                    _ArgList: va_list)
                    -> ::std::os::raw::c_int;
    pub fn _fscanf_l(_Stream: *mut FILE,
                     _Format: *const ::std::os::raw::c_char,
                     _Locale: _locale_t,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn fscanf(_Stream: *mut FILE,
                  _Format: *const ::std::os::raw::c_char,
                  ...)
                  -> ::std::os::raw::c_int;
    pub fn _fscanf_s_l(_Stream: *mut FILE,
                       _Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn fscanf_s(_Stream: *mut FILE,
                    _Format: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn _scanf_l(_Format: *const ::std::os::raw::c_char,
                    _Locale: _locale_t,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn scanf(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn _scanf_s_l(_Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn scanf_s(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsprintf(_Options: ::std::os::raw::c_ulonglong,
                                   _Buffer: *mut ::std::os::raw::c_char,
                                   _BufferCount: size_t,
                                   _Format: *const ::std::os::raw::c_char,
                                   _Locale: _locale_t,
                                   _ArgList: va_list)
                                   -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                     _Buffer: *mut ::std::os::raw::c_char,
                                     _BufferCount: size_t,
                                     _Format: *const ::std::os::raw::c_char,
                                     _Locale: _locale_t,
                                     _ArgList: va_list)
                                     -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsnprintf_s(_Options: ::std::os::raw::c_ulonglong,
                                      _Buffer: *mut ::std::os::raw::c_char,
                                      _BufferCount: size_t,
                                      _MaxCount: size_t,
                                      _Format: *const ::std::os::raw::c_char,
                                      _Locale: _locale_t,
                                      _ArgList: va_list)
                                      -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsprintf_p(_Options: ::std::os::raw::c_ulonglong,
                                     _Buffer: *mut ::std::os::raw::c_char,
                                     _BufferCount: size_t,
                                     _Format: *const ::std::os::raw::c_char,
                                     _Locale: _locale_t,
                                     _ArgList: va_list)
                                     -> ::std::os::raw::c_int;
    pub fn _vsnprintf_l(_Buffer: *mut ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vsnprintf(_Buffer: *mut ::std::os::raw::c_char,
                      _BufferCount: size_t,
                      _Format: *const ::std::os::raw::c_char,
                      _Args: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vsnprintf(_Buffer: *mut ::std::os::raw::c_char,
                     _BufferCount: size_t,
                     _Format: *const ::std::os::raw::c_char,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _vsprintf_l(_Buffer: *mut ::std::os::raw::c_char,
                       _Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn vsprintf(_Buffer: *mut ::std::os::raw::c_char,
                    _Format: *const ::std::os::raw::c_char,
                    _Args: va_list)
                    -> ::std::os::raw::c_int;
    pub fn _vsprintf_s_l(_Buffer: *mut ::std::os::raw::c_char,
                         _BufferCount: size_t,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn vsprintf_s(_Buffer: *mut ::std::os::raw::c_char,
                      _BufferCount: size_t,
                      _Format: *const ::std::os::raw::c_char,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _vsprintf_p_l(_Buffer: *mut ::std::os::raw::c_char,
                         _BufferCount: size_t,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         _ArgList: va_list)
                         -> ::std::os::raw::c_int;
    pub fn _vsprintf_p(_Buffer: *mut ::std::os::raw::c_char,
                       _BufferCount: size_t,
                       _Format: *const ::std::os::raw::c_char,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vsnprintf_s_l(_Buffer: *mut ::std::os::raw::c_char,
                          _BufferCount: size_t,
                          _MaxCount: size_t,
                          _Format: *const ::std::os::raw::c_char,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vsnprintf_s(_Buffer: *mut ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _MaxCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vsnprintf_s(_Buffer: *mut ::std::os::raw::c_char,
                       _BufferCount: size_t,
                       _MaxCount: size_t,
                       _Format: *const ::std::os::raw::c_char,
                       _ArgList: va_list)
                       -> ::std::os::raw::c_int;
    pub fn _vscprintf_l(_Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vscprintf(_Format: *const ::std::os::raw::c_char,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn _vscprintf_p_l(_Format: *const ::std::os::raw::c_char,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vscprintf_p(_Format: *const ::std::os::raw::c_char,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _vsnprintf_c_l(_Buffer: *mut ::std::os::raw::c_char,
                          _BufferCount: size_t,
                          _Format: *const ::std::os::raw::c_char,
                          _Locale: _locale_t,
                          _ArgList: va_list)
                          -> ::std::os::raw::c_int;
    pub fn _vsnprintf_c(_Buffer: *mut ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn _sprintf_l(_Buffer: *mut ::std::os::raw::c_char,
                      _Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn sprintf(_Buffer: *mut ::std::os::raw::c_char,
                   _Format: *const ::std::os::raw::c_char,
                   ...)
                   -> ::std::os::raw::c_int;
    pub fn _sprintf_s_l(_Buffer: *mut ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn sprintf_s(_Buffer: *mut ::std::os::raw::c_char,
                     _BufferCount: size_t,
                     _Format: *const ::std::os::raw::c_char,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn _sprintf_p_l(_Buffer: *mut ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _sprintf_p(_Buffer: *mut ::std::os::raw::c_char,
                      _BufferCount: size_t,
                      _Format: *const ::std::os::raw::c_char,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn _snprintf_l(_Buffer: *mut ::std::os::raw::c_char,
                       _BufferCount: size_t,
                       _Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn snprintf(_Buffer: *mut ::std::os::raw::c_char,
                    _BufferCount: size_t,
                    _Format: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn _snprintf(_Buffer: *mut ::std::os::raw::c_char,
                     _BufferCount: size_t,
                     _Format: *const ::std::os::raw::c_char,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn _snprintf_c_l(_Buffer: *mut ::std::os::raw::c_char,
                         _BufferCount: size_t,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _snprintf_c(_Buffer: *mut ::std::os::raw::c_char,
                       _BufferCount: size_t,
                       _Format: *const ::std::os::raw::c_char,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _snprintf_s_l(_Buffer: *mut ::std::os::raw::c_char,
                         _BufferCount: size_t,
                         _MaxCount: size_t,
                         _Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _snprintf_s(_Buffer: *mut ::std::os::raw::c_char,
                       _BufferCount: size_t,
                       _MaxCount: size_t,
                       _Format: *const ::std::os::raw::c_char,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _scprintf_l(_Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn _scprintf(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn _scprintf_p_l(_Format: *const ::std::os::raw::c_char,
                         _Locale: _locale_t,
                         ...)
                         -> ::std::os::raw::c_int;
    pub fn _scprintf_p(_Format: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn __stdio_common_vsscanf(_Options: ::std::os::raw::c_ulonglong,
                                  _Buffer: *const ::std::os::raw::c_char,
                                  _BufferCount: size_t,
                                  _Format: *const ::std::os::raw::c_char,
                                  _Locale: _locale_t,
                                  _ArgList: va_list)
                                  -> ::std::os::raw::c_int;
    pub fn _vsscanf_l(_Buffer: *const ::std::os::raw::c_char,
                      _Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      _ArgList: va_list)
                      -> ::std::os::raw::c_int;
    pub fn vsscanf(_Buffer: *const ::std::os::raw::c_char,
                   _Format: *const ::std::os::raw::c_char,
                   _ArgList: va_list)
                   -> ::std::os::raw::c_int;
    pub fn _vsscanf_s_l(_Buffer: *const ::std::os::raw::c_char,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        _ArgList: va_list)
                        -> ::std::os::raw::c_int;
    pub fn vsscanf_s(_Buffer: *const ::std::os::raw::c_char,
                     _Format: *const ::std::os::raw::c_char,
                     _ArgList: va_list)
                     -> ::std::os::raw::c_int;
    pub fn _sscanf_l(_Buffer: *const ::std::os::raw::c_char,
                     _Format: *const ::std::os::raw::c_char,
                     _Locale: _locale_t,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn sscanf(_Buffer: *const ::std::os::raw::c_char,
                  _Format: *const ::std::os::raw::c_char,
                  ...)
                  -> ::std::os::raw::c_int;
    pub fn _sscanf_s_l(_Buffer: *const ::std::os::raw::c_char,
                       _Format: *const ::std::os::raw::c_char,
                       _Locale: _locale_t,
                       ...)
                       -> ::std::os::raw::c_int;
    pub fn sscanf_s(_Buffer: *const ::std::os::raw::c_char,
                    _Format: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn _snscanf_l(_Buffer: *const ::std::os::raw::c_char,
                      _BufferCount: size_t,
                      _Format: *const ::std::os::raw::c_char,
                      _Locale: _locale_t,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn _snscanf(_Buffer: *const ::std::os::raw::c_char,
                    _BufferCount: size_t,
                    _Format: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn _snscanf_s_l(_Buffer: *const ::std::os::raw::c_char,
                        _BufferCount: size_t,
                        _Format: *const ::std::os::raw::c_char,
                        _Locale: _locale_t,
                        ...)
                        -> ::std::os::raw::c_int;
    pub fn _snscanf_s(_Buffer: *const ::std::os::raw::c_char,
                      _BufferCount: size_t,
                      _Format: *const ::std::os::raw::c_char,
                      ...)
                      -> ::std::os::raw::c_int;
    pub fn tempnam(_Directory: *const ::std::os::raw::c_char,
                   _FilePrefix: *const ::std::os::raw::c_char)
                   -> *mut ::std::os::raw::c_char;
    pub fn fcloseall() -> ::std::os::raw::c_int;
    pub fn fdopen(_FileHandle: ::std::os::raw::c_int,
                  _Format: *const ::std::os::raw::c_char)
                  -> *mut FILE;
    pub fn fgetchar() -> ::std::os::raw::c_int;
    pub fn fileno(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn flushall() -> ::std::os::raw::c_int;
    pub fn fputchar(_Ch: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn getw(_Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn putw(_Ch: ::std::os::raw::c_int, _Stream: *mut FILE) -> ::std::os::raw::c_int;
    pub fn rmtmp() -> ::std::os::raw::c_int;
    pub fn addch(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn addchnstr(arg1: *const chtype, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn addchstr(arg1: *const chtype) -> ::std::os::raw::c_int;
    pub fn addnstr(arg1: *const ::std::os::raw::c_char,
                   arg2: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn addstr(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn attroff(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn attron(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn attrset(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn attr_get(arg1: *mut attr_t,
                    arg2: *mut ::std::os::raw::c_short,
                    arg3: *mut ::std::os::raw::c_void)
                    -> ::std::os::raw::c_int;
    pub fn attr_off(arg1: attr_t, arg2: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    pub fn attr_on(arg1: attr_t, arg2: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    pub fn attr_set(arg1: attr_t,
                    arg2: ::std::os::raw::c_short,
                    arg3: *mut ::std::os::raw::c_void)
                    -> ::std::os::raw::c_int;
    pub fn baudrate() -> ::std::os::raw::c_int;
    pub fn beep() -> ::std::os::raw::c_int;
    pub fn bkgd(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn bkgdset(arg1: chtype);
    pub fn border(arg1: chtype,
                  arg2: chtype,
                  arg3: chtype,
                  arg4: chtype,
                  arg5: chtype,
                  arg6: chtype,
                  arg7: chtype,
                  arg8: chtype)
                  -> ::std::os::raw::c_int;
    #[link_name = "box"]
    pub fn _box(arg1: *mut WINDOW, arg2: chtype, arg3: chtype) -> ::std::os::raw::c_int;
    pub fn can_change_color() -> _bool;
    pub fn cbreak() -> ::std::os::raw::c_int;
    pub fn chgat(arg1: ::std::os::raw::c_int,
                 arg2: attr_t,
                 arg3: ::std::os::raw::c_short,
                 arg4: *const ::std::os::raw::c_void)
                 -> ::std::os::raw::c_int;
    pub fn clearok(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn clear() -> ::std::os::raw::c_int;
    pub fn clrtobot() -> ::std::os::raw::c_int;
    pub fn clrtoeol() -> ::std::os::raw::c_int;
    pub fn color_content(arg1: ::std::os::raw::c_short,
                         arg2: *mut ::std::os::raw::c_short,
                         arg3: *mut ::std::os::raw::c_short,
                         arg4: *mut ::std::os::raw::c_short)
                         -> ::std::os::raw::c_int;
    pub fn color_set(arg1: ::std::os::raw::c_short,
                     arg2: *mut ::std::os::raw::c_void)
                     -> ::std::os::raw::c_int;
    pub fn copywin(arg1: *const WINDOW,
                   arg2: *mut WINDOW,
                   arg3: ::std::os::raw::c_int,
                   arg4: ::std::os::raw::c_int,
                   arg5: ::std::os::raw::c_int,
                   arg6: ::std::os::raw::c_int,
                   arg7: ::std::os::raw::c_int,
                   arg8: ::std::os::raw::c_int,
                   arg9: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn curs_set(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn def_prog_mode() -> ::std::os::raw::c_int;
    pub fn def_shell_mode() -> ::std::os::raw::c_int;
    pub fn delay_output(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn delch() -> ::std::os::raw::c_int;
    pub fn deleteln() -> ::std::os::raw::c_int;
    pub fn delscreen(arg1: *mut SCREEN);
    pub fn delwin(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn derwin(arg1: *mut WINDOW,
                  arg2: ::std::os::raw::c_int,
                  arg3: ::std::os::raw::c_int,
                  arg4: ::std::os::raw::c_int,
                  arg5: ::std::os::raw::c_int)
                  -> *mut WINDOW;
    pub fn doupdate() -> ::std::os::raw::c_int;
    pub fn dupwin(arg1: *mut WINDOW) -> *mut WINDOW;
    pub fn echochar(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn echo() -> ::std::os::raw::c_int;
    pub fn endwin() -> ::std::os::raw::c_int;
    pub fn erasechar() -> ::std::os::raw::c_char;
    pub fn erase() -> ::std::os::raw::c_int;
    pub fn filter();
    pub fn flash() -> ::std::os::raw::c_int;
    pub fn flushinp() -> ::std::os::raw::c_int;
    pub fn getbkgd(arg1: *mut WINDOW) -> chtype;
    pub fn getnstr(arg1: *mut ::std::os::raw::c_char,
                   arg2: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn getstr(arg1: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn getwin(arg1: *mut FILE) -> *mut WINDOW;
    pub fn halfdelay(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn has_colors() -> _bool;
    pub fn has_ic() -> _bool;
    pub fn has_il() -> _bool;
    pub fn hline(arg1: chtype, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn idcok(arg1: *mut WINDOW, arg2: _bool);
    pub fn idlok(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn immedok(arg1: *mut WINDOW, arg2: _bool);
    pub fn inchnstr(arg1: *mut chtype, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn inchstr(arg1: *mut chtype) -> ::std::os::raw::c_int;
    pub fn inch() -> chtype;
    pub fn init_color(arg1: ::std::os::raw::c_short,
                      arg2: ::std::os::raw::c_short,
                      arg3: ::std::os::raw::c_short,
                      arg4: ::std::os::raw::c_short)
                      -> ::std::os::raw::c_int;
    pub fn init_pair(arg1: ::std::os::raw::c_short,
                     arg2: ::std::os::raw::c_short,
                     arg3: ::std::os::raw::c_short)
                     -> ::std::os::raw::c_int;
    pub fn initscr() -> *mut WINDOW;
    pub fn innstr(arg1: *mut ::std::os::raw::c_char,
                  arg2: ::std::os::raw::c_int)
                  -> ::std::os::raw::c_int;
    pub fn insch(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn insdelln(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn insertln() -> ::std::os::raw::c_int;
    pub fn insnstr(arg1: *const ::std::os::raw::c_char,
                   arg2: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn insstr(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn instr(arg1: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn intrflush(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn isendwin() -> _bool;
    pub fn is_linetouched(arg1: *mut WINDOW, arg2: ::std::os::raw::c_int) -> _bool;
    pub fn is_wintouched(arg1: *mut WINDOW) -> _bool;
    pub fn keyname(arg1: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
    pub fn keypad(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn killchar() -> ::std::os::raw::c_char;
    pub fn leaveok(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn longname() -> *mut ::std::os::raw::c_char;
    pub fn meta(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    #[link_name = "move"]
    pub fn _move(arg1: ::std::os::raw::c_int,
                 arg2: ::std::os::raw::c_int)
                 -> ::std::os::raw::c_int;
    pub fn mvaddch(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: chtype)
                   -> ::std::os::raw::c_int;
    pub fn mvaddchnstr(arg1: ::std::os::raw::c_int,
                       arg2: ::std::os::raw::c_int,
                       arg3: *const chtype,
                       arg4: ::std::os::raw::c_int)
                       -> ::std::os::raw::c_int;
    pub fn mvaddchstr(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int,
                      arg3: *const chtype)
                      -> ::std::os::raw::c_int;
    pub fn mvaddnstr(arg1: ::std::os::raw::c_int,
                     arg2: ::std::os::raw::c_int,
                     arg3: *const ::std::os::raw::c_char,
                     arg4: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn mvaddstr(arg1: ::std::os::raw::c_int,
                    arg2: ::std::os::raw::c_int,
                    arg3: *const ::std::os::raw::c_char)
                    -> ::std::os::raw::c_int;
    pub fn mvchgat(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: ::std::os::raw::c_int,
                   arg4: attr_t,
                   arg5: ::std::os::raw::c_short,
                   arg6: *const ::std::os::raw::c_void)
                   -> ::std::os::raw::c_int;
    pub fn mvcur(arg1: ::std::os::raw::c_int,
                 arg2: ::std::os::raw::c_int,
                 arg3: ::std::os::raw::c_int,
                 arg4: ::std::os::raw::c_int)
                 -> ::std::os::raw::c_int;
    pub fn mvdelch(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn mvderwin(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn mvgetch(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn mvgetnstr(arg1: ::std::os::raw::c_int,
                     arg2: ::std::os::raw::c_int,
                     arg3: *mut ::std::os::raw::c_char,
                     arg4: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn mvgetstr(arg1: ::std::os::raw::c_int,
                    arg2: ::std::os::raw::c_int,
                    arg3: *mut ::std::os::raw::c_char)
                    -> ::std::os::raw::c_int;
    pub fn mvhline(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: chtype,
                   arg4: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn mvinch(arg1: ::std::os::raw::c_int, arg2: ::std::os::raw::c_int) -> chtype;
    pub fn mvinchnstr(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int,
                      arg3: *mut chtype,
                      arg4: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvinchstr(arg1: ::std::os::raw::c_int,
                     arg2: ::std::os::raw::c_int,
                     arg3: *mut chtype)
                     -> ::std::os::raw::c_int;
    pub fn mvinnstr(arg1: ::std::os::raw::c_int,
                    arg2: ::std::os::raw::c_int,
                    arg3: *mut ::std::os::raw::c_char,
                    arg4: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn mvinsch(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: chtype)
                   -> ::std::os::raw::c_int;
    pub fn mvinsnstr(arg1: ::std::os::raw::c_int,
                     arg2: ::std::os::raw::c_int,
                     arg3: *const ::std::os::raw::c_char,
                     arg4: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn mvinsstr(arg1: ::std::os::raw::c_int,
                    arg2: ::std::os::raw::c_int,
                    arg3: *const ::std::os::raw::c_char)
                    -> ::std::os::raw::c_int;
    pub fn mvinstr(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: *mut ::std::os::raw::c_char)
                   -> ::std::os::raw::c_int;
    pub fn mvprintw(arg1: ::std::os::raw::c_int,
                    arg2: ::std::os::raw::c_int,
                    arg3: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn mvscanw(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: *const ::std::os::raw::c_char,
                   ...)
                   -> ::std::os::raw::c_int;
    pub fn mvvline(arg1: ::std::os::raw::c_int,
                   arg2: ::std::os::raw::c_int,
                   arg3: chtype,
                   arg4: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn mvwaddchnstr(arg1: *mut WINDOW,
                        arg2: ::std::os::raw::c_int,
                        arg3: ::std::os::raw::c_int,
                        arg4: *const chtype,
                        arg5: ::std::os::raw::c_int)
                        -> ::std::os::raw::c_int;
    pub fn mvwaddchstr(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int,
                       arg4: *const chtype)
                       -> ::std::os::raw::c_int;
    pub fn mvwaddch(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: chtype)
                    -> ::std::os::raw::c_int;
    pub fn mvwaddnstr(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_int,
                      arg3: ::std::os::raw::c_int,
                      arg4: *const ::std::os::raw::c_char,
                      arg5: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvwaddstr(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int,
                     arg4: *const ::std::os::raw::c_char)
                     -> ::std::os::raw::c_int;
    pub fn mvwchgat(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: ::std::os::raw::c_int,
                    arg5: attr_t,
                    arg6: ::std::os::raw::c_short,
                    arg7: *const ::std::os::raw::c_void)
                    -> ::std::os::raw::c_int;
    pub fn mvwdelch(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn mvwgetch(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn mvwgetnstr(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_int,
                      arg3: ::std::os::raw::c_int,
                      arg4: *mut ::std::os::raw::c_char,
                      arg5: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvwgetstr(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int,
                     arg4: *mut ::std::os::raw::c_char)
                     -> ::std::os::raw::c_int;
    pub fn mvwhline(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: chtype,
                    arg5: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn mvwinchnstr(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int,
                       arg4: *mut chtype,
                       arg5: ::std::os::raw::c_int)
                       -> ::std::os::raw::c_int;
    pub fn mvwinchstr(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_int,
                      arg3: ::std::os::raw::c_int,
                      arg4: *mut chtype)
                      -> ::std::os::raw::c_int;
    pub fn mvwinch(arg1: *mut WINDOW,
                   arg2: ::std::os::raw::c_int,
                   arg3: ::std::os::raw::c_int)
                   -> chtype;
    pub fn mvwinnstr(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int,
                     arg4: *mut ::std::os::raw::c_char,
                     arg5: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn mvwinsch(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: chtype)
                    -> ::std::os::raw::c_int;
    pub fn mvwinsnstr(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_int,
                      arg3: ::std::os::raw::c_int,
                      arg4: *const ::std::os::raw::c_char,
                      arg5: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvwinsstr(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int,
                     arg4: *const ::std::os::raw::c_char)
                     -> ::std::os::raw::c_int;
    pub fn mvwinstr(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: *mut ::std::os::raw::c_char)
                    -> ::std::os::raw::c_int;
    pub fn mvwin(arg1: *mut WINDOW,
                 arg2: ::std::os::raw::c_int,
                 arg3: ::std::os::raw::c_int)
                 -> ::std::os::raw::c_int;
    pub fn mvwprintw(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int,
                     arg4: *const ::std::os::raw::c_char,
                     ...)
                     -> ::std::os::raw::c_int;
    pub fn mvwscanw(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: *const ::std::os::raw::c_char,
                    ...)
                    -> ::std::os::raw::c_int;
    pub fn mvwvline(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: chtype,
                    arg5: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn napms(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn newpad(arg1: ::std::os::raw::c_int, arg2: ::std::os::raw::c_int) -> *mut WINDOW;
    pub fn newterm(arg1: *const ::std::os::raw::c_char,
                   arg2: *mut FILE,
                   arg3: *mut FILE)
                   -> *mut SCREEN;
    pub fn newwin(arg1: ::std::os::raw::c_int,
                  arg2: ::std::os::raw::c_int,
                  arg3: ::std::os::raw::c_int,
                  arg4: ::std::os::raw::c_int)
                  -> *mut WINDOW;
    pub fn nl() -> ::std::os::raw::c_int;
    pub fn nocbreak() -> ::std::os::raw::c_int;
    pub fn nodelay(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn noecho() -> ::std::os::raw::c_int;
    pub fn nonl() -> ::std::os::raw::c_int;
    pub fn noqiflush();
    pub fn noraw() -> ::std::os::raw::c_int;
    pub fn notimeout(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn overlay(arg1: *const WINDOW, arg2: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn overwrite(arg1: *const WINDOW, arg2: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn pair_content(arg1: ::std::os::raw::c_short,
                        arg2: *mut ::std::os::raw::c_short,
                        arg3: *mut ::std::os::raw::c_short)
                        -> ::std::os::raw::c_int;
    pub fn pechochar(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn pnoutrefresh(arg1: *mut WINDOW,
                        arg2: ::std::os::raw::c_int,
                        arg3: ::std::os::raw::c_int,
                        arg4: ::std::os::raw::c_int,
                        arg5: ::std::os::raw::c_int,
                        arg6: ::std::os::raw::c_int,
                        arg7: ::std::os::raw::c_int)
                        -> ::std::os::raw::c_int;
    pub fn prefresh(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: ::std::os::raw::c_int,
                    arg5: ::std::os::raw::c_int,
                    arg6: ::std::os::raw::c_int,
                    arg7: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn printw(arg1: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn putwin(arg1: *mut WINDOW, arg2: *mut FILE) -> ::std::os::raw::c_int;
    pub fn qiflush();
    pub fn raw() -> ::std::os::raw::c_int;
    pub fn redrawwin(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn refresh() -> ::std::os::raw::c_int;
    pub fn reset_prog_mode() -> ::std::os::raw::c_int;
    pub fn reset_shell_mode() -> ::std::os::raw::c_int;
    pub fn resetty() -> ::std::os::raw::c_int;
    pub fn ripoffline(arg1: ::std::os::raw::c_int,
                      arg2:
                          ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                         *mut WINDOW,
                                                                     arg2:
                                                                         ::std::os::raw::c_int)
                                                    -> ::std::os::raw::c_int>)
     -> ::std::os::raw::c_int;
    pub fn savetty() -> ::std::os::raw::c_int;
    pub fn scanw(arg1: *const ::std::os::raw::c_char, ...) -> ::std::os::raw::c_int;
    pub fn scr_dump(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn scr_init(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn scr_restore(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn scr_set(arg1: *const ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn scrl(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn scroll(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn scrollok(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn set_term(arg1: *mut SCREEN) -> *mut SCREEN;
    pub fn setscrreg(arg1: ::std::os::raw::c_int,
                     arg2: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn slk_attroff(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn slk_attr_off(arg1: attr_t, arg2: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    pub fn slk_attron(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn slk_attr_on(arg1: attr_t, arg2: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    pub fn slk_attrset(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn slk_attr_set(arg1: attr_t,
                        arg2: ::std::os::raw::c_short,
                        arg3: *mut ::std::os::raw::c_void)
                        -> ::std::os::raw::c_int;
    pub fn slk_clear() -> ::std::os::raw::c_int;
    pub fn slk_color(arg1: ::std::os::raw::c_short) -> ::std::os::raw::c_int;
    pub fn slk_init(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn slk_label(arg1: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
    pub fn slk_noutrefresh() -> ::std::os::raw::c_int;
    pub fn slk_refresh() -> ::std::os::raw::c_int;
    pub fn slk_restore() -> ::std::os::raw::c_int;
    pub fn slk_set(arg1: ::std::os::raw::c_int,
                   arg2: *const ::std::os::raw::c_char,
                   arg3: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn slk_touch() -> ::std::os::raw::c_int;
    pub fn standend() -> ::std::os::raw::c_int;
    pub fn standout() -> ::std::os::raw::c_int;
    pub fn start_color() -> ::std::os::raw::c_int;
    pub fn subpad(arg1: *mut WINDOW,
                  arg2: ::std::os::raw::c_int,
                  arg3: ::std::os::raw::c_int,
                  arg4: ::std::os::raw::c_int,
                  arg5: ::std::os::raw::c_int)
                  -> *mut WINDOW;
    pub fn subwin(arg1: *mut WINDOW,
                  arg2: ::std::os::raw::c_int,
                  arg3: ::std::os::raw::c_int,
                  arg4: ::std::os::raw::c_int,
                  arg5: ::std::os::raw::c_int)
                  -> *mut WINDOW;
    pub fn syncok(arg1: *mut WINDOW, arg2: _bool) -> ::std::os::raw::c_int;
    pub fn termattrs() -> chtype;
    pub fn term_attrs() -> attr_t;
    pub fn termname() -> *mut ::std::os::raw::c_char;
    pub fn timeout(arg1: ::std::os::raw::c_int);
    pub fn touchline(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn touchwin(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn typeahead(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn untouchwin(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn use_env(arg1: _bool);
    pub fn vidattr(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn vid_attr(arg1: attr_t,
                    arg2: ::std::os::raw::c_short,
                    arg3: *mut ::std::os::raw::c_void)
                    -> ::std::os::raw::c_int;
    pub fn vidputs(arg1: chtype,
                   arg2: ::std::option::Option<extern "C" fn(arg1: ::std::os::raw::c_int)
                                                               -> ::std::os::raw::c_int>)
                   -> ::std::os::raw::c_int;
    pub fn vid_puts(arg1: attr_t,
                    arg2: ::std::os::raw::c_short,
                    arg3: *mut ::std::os::raw::c_void,
                    arg4: ::std::option::Option<extern "C" fn(arg1: ::std::os::raw::c_int)
                                                                -> ::std::os::raw::c_int>)
                    -> ::std::os::raw::c_int;
    pub fn vline(arg1: chtype, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn vw_printw(arg1: *mut WINDOW,
                     arg2: *const ::std::os::raw::c_char,
                     arg3: va_list)
                     -> ::std::os::raw::c_int;
    pub fn vwprintw(arg1: *mut WINDOW,
                    arg2: *const ::std::os::raw::c_char,
                    arg3: va_list)
                    -> ::std::os::raw::c_int;
    pub fn vw_scanw(arg1: *mut WINDOW,
                    arg2: *const ::std::os::raw::c_char,
                    arg3: va_list)
                    -> ::std::os::raw::c_int;
    pub fn vwscanw(arg1: *mut WINDOW,
                   arg2: *const ::std::os::raw::c_char,
                   arg3: va_list)
                   -> ::std::os::raw::c_int;
    pub fn waddchnstr(arg1: *mut WINDOW,
                      arg2: *const chtype,
                      arg3: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn waddchstr(arg1: *mut WINDOW, arg2: *const chtype) -> ::std::os::raw::c_int;
    pub fn waddch(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn waddnstr(arg1: *mut WINDOW,
                    arg2: *const ::std::os::raw::c_char,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn waddstr(arg1: *mut WINDOW,
                   arg2: *const ::std::os::raw::c_char)
                   -> ::std::os::raw::c_int;
    pub fn wattroff(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn wattron(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn wattrset(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn wattr_get(arg1: *mut WINDOW,
                     arg2: *mut attr_t,
                     arg3: *mut ::std::os::raw::c_short,
                     arg4: *mut ::std::os::raw::c_void)
                     -> ::std::os::raw::c_int;
    pub fn wattr_off(arg1: *mut WINDOW,
                     arg2: attr_t,
                     arg3: *mut ::std::os::raw::c_void)
                     -> ::std::os::raw::c_int;
    pub fn wattr_on(arg1: *mut WINDOW,
                    arg2: attr_t,
                    arg3: *mut ::std::os::raw::c_void)
                    -> ::std::os::raw::c_int;
    pub fn wattr_set(arg1: *mut WINDOW,
                     arg2: attr_t,
                     arg3: ::std::os::raw::c_short,
                     arg4: *mut ::std::os::raw::c_void)
                     -> ::std::os::raw::c_int;
    pub fn wbkgdset(arg1: *mut WINDOW, arg2: chtype);
    pub fn wbkgd(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn wborder(arg1: *mut WINDOW,
                   arg2: chtype,
                   arg3: chtype,
                   arg4: chtype,
                   arg5: chtype,
                   arg6: chtype,
                   arg7: chtype,
                   arg8: chtype,
                   arg9: chtype)
                   -> ::std::os::raw::c_int;
    pub fn wchgat(arg1: *mut WINDOW,
                  arg2: ::std::os::raw::c_int,
                  arg3: attr_t,
                  arg4: ::std::os::raw::c_short,
                  arg5: *const ::std::os::raw::c_void)
                  -> ::std::os::raw::c_int;
    pub fn wclear(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wclrtobot(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wclrtoeol(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wcolor_set(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_short,
                      arg3: *mut ::std::os::raw::c_void)
                      -> ::std::os::raw::c_int;
    pub fn wcursyncup(arg1: *mut WINDOW);
    pub fn wdelch(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wdeleteln(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wechochar(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn werase(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wgetch(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wgetnstr(arg1: *mut WINDOW,
                    arg2: *mut ::std::os::raw::c_char,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn wgetstr(arg1: *mut WINDOW, arg2: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn whline(arg1: *mut WINDOW,
                  arg2: chtype,
                  arg3: ::std::os::raw::c_int)
                  -> ::std::os::raw::c_int;
    pub fn winchnstr(arg1: *mut WINDOW,
                     arg2: *mut chtype,
                     arg3: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn winchstr(arg1: *mut WINDOW, arg2: *mut chtype) -> ::std::os::raw::c_int;
    pub fn winch(arg1: *mut WINDOW) -> chtype;
    pub fn winnstr(arg1: *mut WINDOW,
                   arg2: *mut ::std::os::raw::c_char,
                   arg3: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn winsch(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn winsdelln(arg1: *mut WINDOW, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn winsertln(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn winsnstr(arg1: *mut WINDOW,
                    arg2: *const ::std::os::raw::c_char,
                    arg3: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn winsstr(arg1: *mut WINDOW,
                   arg2: *const ::std::os::raw::c_char)
                   -> ::std::os::raw::c_int;
    pub fn winstr(arg1: *mut WINDOW, arg2: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn wmove(arg1: *mut WINDOW,
                 arg2: ::std::os::raw::c_int,
                 arg3: ::std::os::raw::c_int)
                 -> ::std::os::raw::c_int;
    pub fn wnoutrefresh(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wprintw(arg1: *mut WINDOW,
                   arg2: *const ::std::os::raw::c_char,
                   ...)
                   -> ::std::os::raw::c_int;
    pub fn wredrawln(arg1: *mut WINDOW,
                     arg2: ::std::os::raw::c_int,
                     arg3: ::std::os::raw::c_int)
                     -> ::std::os::raw::c_int;
    pub fn wrefresh(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wscanw(arg1: *mut WINDOW,
                  arg2: *const ::std::os::raw::c_char,
                  ...)
                  -> ::std::os::raw::c_int;
    pub fn wscrl(arg1: *mut WINDOW, arg2: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn wsetscrreg(arg1: *mut WINDOW,
                      arg2: ::std::os::raw::c_int,
                      arg3: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn wstandend(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wstandout(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn wsyncdown(arg1: *mut WINDOW);
    pub fn wsyncup(arg1: *mut WINDOW);
    pub fn wtimeout(arg1: *mut WINDOW, arg2: ::std::os::raw::c_int);
    pub fn wtouchln(arg1: *mut WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int,
                    arg4: ::std::os::raw::c_int)
                    -> ::std::os::raw::c_int;
    pub fn wvline(arg1: *mut WINDOW,
                  arg2: chtype,
                  arg3: ::std::os::raw::c_int)
                  -> ::std::os::raw::c_int;
    pub fn getattrs(arg1: *mut WINDOW) -> chtype;
    pub fn getbegx(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getbegy(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getmaxx(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getmaxy(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getparx(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getpary(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getcurx(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn getcury(arg1: *mut WINDOW) -> ::std::os::raw::c_int;
    pub fn traceoff();
    pub fn traceon();
    pub fn unctrl(arg1: chtype) -> *mut ::std::os::raw::c_char;
    pub fn crmode() -> ::std::os::raw::c_int;
    pub fn nocrmode() -> ::std::os::raw::c_int;
    pub fn draino(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn resetterm() -> ::std::os::raw::c_int;
    pub fn fixterm() -> ::std::os::raw::c_int;
    pub fn saveterm() -> ::std::os::raw::c_int;
    pub fn setsyx(arg1: ::std::os::raw::c_int,
                  arg2: ::std::os::raw::c_int)
                  -> ::std::os::raw::c_int;
    pub fn mouse_set(arg1: ::std::os::raw::c_ulong) -> ::std::os::raw::c_int;
    pub fn mouse_on(arg1: ::std::os::raw::c_ulong) -> ::std::os::raw::c_int;
    pub fn mouse_off(arg1: ::std::os::raw::c_ulong) -> ::std::os::raw::c_int;
    pub fn request_mouse_pos() -> ::std::os::raw::c_int;
    pub fn map_button(arg1: ::std::os::raw::c_ulong) -> ::std::os::raw::c_int;
    pub fn wmouse_position(arg1: *mut WINDOW,
                           arg2: *mut ::std::os::raw::c_int,
                           arg3: *mut ::std::os::raw::c_int);
    pub fn getmouse() -> ::std::os::raw::c_ulong;
    pub fn getbmap() -> ::std::os::raw::c_ulong;
    pub fn assume_default_colors(arg1: ::std::os::raw::c_int,
                                 arg2: ::std::os::raw::c_int)
                                 -> ::std::os::raw::c_int;
    pub fn curses_version() -> *const ::std::os::raw::c_char;
    pub fn has_key(arg1: ::std::os::raw::c_int) -> _bool;
    pub fn use_default_colors() -> ::std::os::raw::c_int;
    pub fn wresize(arg1: *mut WINDOW,
                   arg2: ::std::os::raw::c_int,
                   arg3: ::std::os::raw::c_int)
                   -> ::std::os::raw::c_int;
    pub fn mouseinterval(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn mousemask(arg1: mmask_t, arg2: *mut mmask_t) -> mmask_t;
    pub fn mouse_trafo(arg1: *mut ::std::os::raw::c_int,
                       arg2: *mut ::std::os::raw::c_int,
                       arg3: _bool)
                       -> _bool;
    pub fn nc_getmouse(arg1: *mut MEVENT) -> ::std::os::raw::c_int;
    pub fn ungetmouse(arg1: *mut MEVENT) -> ::std::os::raw::c_int;
    pub fn wenclose(arg1: *const WINDOW,
                    arg2: ::std::os::raw::c_int,
                    arg3: ::std::os::raw::c_int)
                    -> _bool;
    pub fn wmouse_trafo(arg1: *const WINDOW,
                        arg2: *mut ::std::os::raw::c_int,
                        arg3: *mut ::std::os::raw::c_int,
                        arg4: _bool)
                        -> _bool;
    pub fn addrawch(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn insrawch(arg1: chtype) -> ::std::os::raw::c_int;
    pub fn is_termresized() -> _bool;
    pub fn mvaddrawch(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int,
                      arg3: chtype)
                      -> ::std::os::raw::c_int;
    pub fn mvdeleteln(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvinsertln(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int)
                      -> ::std::os::raw::c_int;
    pub fn mvinsrawch(arg1: ::std::os::raw::c_int,
                      arg2: ::std::os::raw::c_int,
                      arg3: chtype)
                      -> ::std::os::raw::c_int;
    pub fn mvwaddrawch(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int,
                       arg4: chtype)
                       -> ::std::os::raw::c_int;
    pub fn mvwdeleteln(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int)
                       -> ::std::os::raw::c_int;
    pub fn mvwinsertln(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int)
                       -> ::std::os::raw::c_int;
    pub fn mvwinsrawch(arg1: *mut WINDOW,
                       arg2: ::std::os::raw::c_int,
                       arg3: ::std::os::raw::c_int,
                       arg4: chtype)
                       -> ::std::os::raw::c_int;
    pub fn raw_output(arg1: _bool) -> ::std::os::raw::c_int;
    pub fn resize_term(arg1: ::std::os::raw::c_int,
                       arg2: ::std::os::raw::c_int)
                       -> ::std::os::raw::c_int;
    pub fn resize_window(arg1: *mut WINDOW,
                         arg2: ::std::os::raw::c_int,
                         arg3: ::std::os::raw::c_int)
                         -> *mut WINDOW;
    pub fn waddrawch(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn winsrawch(arg1: *mut WINDOW, arg2: chtype) -> ::std::os::raw::c_int;
    pub fn wordchar() -> ::std::os::raw::c_char;
    pub fn PDC_debug(arg1: *const ::std::os::raw::c_char, ...);
    pub fn PDC_ungetch(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn PDC_set_blink(arg1: _bool) -> ::std::os::raw::c_int;
    pub fn PDC_set_line_color(arg1: ::std::os::raw::c_short) -> ::std::os::raw::c_int;
    pub fn PDC_set_title(arg1: *const ::std::os::raw::c_char);
    pub fn PDC_clearclipboard() -> ::std::os::raw::c_int;
    pub fn PDC_freeclipboard(arg1: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
    pub fn PDC_getclipboard(arg1: *mut *mut ::std::os::raw::c_char,
                            arg2: *mut ::std::os::raw::c_long)
                            -> ::std::os::raw::c_int;
    pub fn PDC_setclipboard(arg1: *const ::std::os::raw::c_char,
                            arg2: ::std::os::raw::c_long)
                            -> ::std::os::raw::c_int;
    pub fn PDC_get_input_fd() -> ::std::os::raw::c_ulong;
    pub fn PDC_get_key_modifiers() -> ::std::os::raw::c_ulong;
    pub fn PDC_return_key_modifiers(arg1: _bool) -> ::std::os::raw::c_int;
    pub fn PDC_save_key_modifiers(arg1: _bool) -> ::std::os::raw::c_int;
    pub fn PDC_set_resize_limits(new_min_lines: ::std::os::raw::c_int,
                                 new_max_lines: ::std::os::raw::c_int,
                                 new_min_cols: ::std::os::raw::c_int,
                                 new_max_cols: ::std::os::raw::c_int);
    pub fn PDC_set_function_key(function: ::std::os::raw::c_uint,
                                new_key: ::std::os::raw::c_int)
                                -> ::std::os::raw::c_int;
    pub fn Xinitscr(arg1: ::std::os::raw::c_int,
                    arg2: *mut *mut ::std::os::raw::c_char)
                    -> *mut WINDOW;
}
